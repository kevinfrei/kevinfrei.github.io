{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["ddo","data","key","text","undefined","toString","styles","root","flexGrow","unitOptions","machineOptions","cutWidthOptions","fluteOptions","aggressionOptions","materialOptions","feedRate","depth","frMult","Map","trim","str","acc","val","toFixed","indexOf","i","length","substring","App","React","useState","machine","setMachine","unit","setUnit","cutWidth","setcutWidth","numFlutes","setNumFlutes","aggression","setAggression","material","setMaterial","rpmValue","setRPMval","depthOfCut","chipLoad","materialData","cutterNumber","fluteCount","machineFactor","machineKey","aggressionFactor","unitScale","multiplier","get","Math","min","dd","label","options","change","className","Dropdown","defaultSelectedKey","placeholder","onChange","_ev","_itm","index","selectedKey","dt","digits","suffix","TextField","readOnly","value","Slider","max","ChoiceGroup","flexContainer","display","option","href","style","position","bottom","right","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAYA,SAASA,EACPC,EACAC,EACAC,GAEA,YAAgBC,IAATD,EACH,CAAED,MAAKC,OAAMF,QACb,CAAEC,MAAKC,KAAMD,EAAIG,WAAYJ,QAGnC,IAAMK,EAAS,CAAEC,KAAM,CAAEC,SAAU,IAC7BC,EAAoC,CACxC,CAAEN,KAAM,KAAMD,IAAK,KAAMI,UACzB,CAAEH,KAAM,SAAUD,IAAK,OAAQI,WAI3BI,EAA4C,CAChDV,EAAI,EAAG,cACPA,EAAI,EAAG,MACPA,EAAI,GAAK,aACTA,EAAI,IAAK,UAILW,EAA6C,CACjDX,EAAI,EAAG,SACPA,EAAI,EAAG,QACPA,EAAI,EAAG,SACPA,EAAI,EAAG,QACPA,EAAI,EAAG,OACPA,EAAI,EAAG,OACPA,EAAI,EAAG,OACPA,EAAI,EAAG,QAIHY,EAA0C,CAC9CZ,EAAI,EAAG,GACPA,EAAI,EAAG,GACPA,EAAI,EAAG,GACPA,EAAI,EAAG,IAIHa,EAA+C,CACnDb,EAAI,GAAK,gBACTA,EAAI,EAAG,UACPA,EAAI,KAAM,eAUNc,EAAoD,CACxDd,EACE,CACEe,SAAU,CAAC,KAAQ,KAAQ,KAAO,OAClCC,MAAO,CAAC,KAAO,KAAO,MAAQ,OAC9BC,OAAQ,IAAIC,IAAoB,CAAC,CAAC,aAAc,QAElD,mBAEFlB,EACE,CACEe,SAAU,CAAC,MAAQ,KAAO,MAAQ,OAClCC,MAAO,CAAC,IAAM,KAAO,KAAO,MAC5BC,OAAQ,IAAIC,IAAoB,CAAC,CAAC,aAAc,MAElD,oCAEFlB,EACE,CACEe,SAAU,CAAC,MAAQ,MAAQ,KAAO,OAClCC,MAAO,CAAC,IAAM,IAAM,IAAM,KAC1BC,OAAQ,IAAIC,IAAoB,CAAC,CAAC,aAAc,MAElD,sCAEFlB,EACE,CACEe,SAAU,CAAC,MAAQ,KAAO,MAAQ,OAClCC,MAAO,CAAC,IAAM,IAAM,IAAM,KAC1BC,OAAQ,IAAIC,IAAoB,CAAC,CAAC,aAAc,MAElD,OAEFlB,EACE,CACEe,SAAU,CAAC,MAAQ,KAAO,MAAQ,OAClCC,MAAO,CAAC,IAAM,IAAM,IAAM,KAC1BC,OAAQ,IAAIC,IAAoB,CAAC,CAAC,aAAc,MAElD,sCAEFlB,EACE,CACEe,SAAU,CAAC,MAAQ,MAAQ,MAAQ,OACnCC,MAAO,CAAC,IAAM,GAAK,IAAM,KACzBC,OAAQ,IAAIC,IAAoB,CAAC,CAAC,aAAc,MAElD,qCAIJ,SAASC,EAAKC,EAAaC,GACzB,IAAMC,EAAMF,EAAIG,QAAQF,GACxB,GAAIC,EAAIE,QAAQ,MAAQ,EACtB,IAAK,IAAIC,EAAIH,EAAII,OAAS,EAAGD,EAAI,EAAGA,IAClC,GAAe,MAAXH,EAAIG,GACN,OAAOH,EAAIK,UAAU,EAAc,MAAXL,EAAIG,GAAaA,EAAIA,EAAI,GAIvD,OAAOH,EAmIMM,MAhIf,WAEE,MAA8BC,IAAMC,SA3Gf,GA2GrB,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBH,IAAMC,SAAwB,MAAtD,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgCL,IAAMC,SArGhB,GAqGtB,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAkCP,IAAMC,SA1FrB,GA0FnB,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAoCT,IAAMC,SAnFlB,GAmFxB,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAAgCX,IAAMC,SAvEhB,GAuEtB,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAA8Bb,IAAMC,SAAS,MAA7C,mBAAOa,EAAP,KAAiBC,EAAjB,KAEI7B,EAAW,EACX8B,EAAa,EACbC,EAAW,EACf,QACc1C,IAAZ2B,QACe3B,IAAfmC,QACanC,IAAb+B,QACa/B,IAAbqC,QACcrC,IAAdiC,EACA,CACA,IAAMU,EAAejC,EAAgB2B,GAAUxC,KACzC+C,EAAerC,EAAgBwB,GAAUlC,KACzCgD,EAAarC,EAAayB,GAAWnC,IACrCgD,EAAgBxC,EAAeqB,GAAS9B,KACxCkD,EAAazC,EAAeqB,GAAS7B,IACrCkD,EAAmBvC,EAAkB0B,GAAYtC,KACvD,QACmBG,IAAjB2C,QACiB3C,IAAjB4C,QACkB5C,IAAlB8C,QACqB9C,IAArBgD,EACA,CACA,IAAMC,EAAqB,OAATpB,EAAgB,KAAO,EACzClB,EAAWgC,EAAahC,SAASiC,GAAgBL,EAAWM,EAE5D,IAAMK,EAAaP,EAAa9B,OAAOsC,IAAIJ,IAAe,EAC1DpC,EAAWyC,KAAKC,IAAI,IAAK1C,EAAWuC,GAAcD,EAClDR,EACEE,EAAa/B,MAAMgC,GACnBE,EACAE,EACAC,EACFP,EAAY/B,GAAY4B,EAAWM,GAAeI,GAGtD,SAASK,EACPC,EACAC,EACAtC,EACAuC,GAEA,OACE,sBAAKC,UAAU,SAAf,UACE,qBAAKA,UAAU,UAAf,SAA0BH,IAC1B,qBAAKG,UAAU,UAAf,SACE,cAACC,EAAA,EAAD,CACEC,mBAAoBJ,EAAQtC,GAAKpB,IACjC+D,YAAaN,EACbC,QAASA,EACTM,SAAU,SAACC,EAAKC,EAAMC,GAAZ,YACEjE,IAAViE,GAAuBR,EAAOQ,IAEhCC,YAAaV,EAAQtC,GAAKpB,WAMpC,SAASqE,GAAGZ,EAAerC,EAAakD,EAAgBC,GACtD,OACE,sBAAKX,UAAU,SAAf,UACE,qBAAKA,UAAU,UAAf,SAA0BH,IAC1B,qBAAKG,UAAU,UAAf,SACE,cAACY,EAAA,EAAD,CAAWC,UAAQ,EAACC,MAAOzD,EAAKG,EAAKkD,GAAU,IAAMC,SAM7D,OACE,gCACE,qBAAKX,UAAU,gBAAf,SACE,gCACE,qBAAKA,UAAU,SAAf,kCACA,sBAAKA,UAAU,WAAf,UACGJ,EAAG,mBAAoBhD,EAAgBqB,EAASC,GAChD0B,EAAG,kBAAmB/C,EAAiBwB,EAAUC,GACjDsB,EAAG,cAAe9C,EAAcyB,EAAWC,GAC3CoB,EAAG,aAAc7C,EAAmB0B,EAAYC,GAChDkB,EAAG,WAAY5C,EAAiB2B,EAAUC,GAC3C,sBAAKoB,UAAU,SAAf,UACE,qBAAKA,UAAU,UAAf,iBACA,qBAAKA,UAAU,UAAf,SACE,cAACe,EAAA,EAAD,CACEpB,IAAK,IACLqB,IAAK,KACLF,MAAOjC,EACPuB,SAAUtB,SAIhB,sBAAKkB,UAAU,SAAf,UACE,qBAAKA,UAAU,UAAf,0BACA,qBAAKA,UAAU,UAAf,SACE,cAACiB,EAAA,EAAD,CACEzE,OAAQ,CACN0E,cAAe,CAAEC,QAAS,QAC1B1E,KAAM,CAAE0E,QAAS,WAEnBX,YAAarC,EACb2B,QAASnD,EACTyD,SAAU,SAACC,EAAUe,GACnBA,GAAUhD,EAAuB,OAAfgD,EAAOhF,IAAe,KAAO,gBAKtDqE,GAAG,YAAaxD,EAAU,EAAGkB,EAAO,QACpCsC,GAAG,eAAgB1B,EAAY,EAAGZ,GAClCsC,GAAG,YAAazB,EAAU,EAAGb,WAIpC,mBAAGkD,KAAK,wCAAwCC,MAAO,CAACC,SAAS,QAASC,OAAO,GAAIC,MAAO,IAA5F,6BClPSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ac97b2c5.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport {\n  ChoiceGroup,\n  Dropdown,\n  IChoiceGroupOption,\n  IDropdownOption,\n  Slider,\n  TextField,\n} from '@fluentui/react';\n\nfunction ddo<T>(\n  data: T,\n  key: string | number,\n  text?: string,\n): IDropdownOption<T> {\n  return text !== undefined\n    ? { key, text, data }\n    : { key, text: key.toString(), data };\n}\n\nconst styles = { root: { flexGrow: 1 } };\nconst unitOptions: IChoiceGroupOption[] = [\n  { text: 'mm', key: 'mm', styles },\n  { text: 'inches', key: 'inch', styles },\n];\n\nconst machineDefault = 0;\nconst machineOptions: IDropdownOption<number>[] = [\n  ddo(2, 'PowerRoute'), // Default, cuz that's what I own\n  ddo(1, 'M3'),\n  ddo(0.7, 'CarveKing'),\n  ddo(1.7, 'MegaV'),\n];\n\nconst cutWidthDefault = 1;\nconst cutWidthOptions: IDropdownOption<number>[] = [\n  ddo(0, '1/16\"'),\n  ddo(1, '1/8\"'), // Default\n  ddo(2, '3/16\"'),\n  ddo(3, '1/4\"'),\n  ddo(0, '2mm'),\n  ddo(1, '3mm'),\n  ddo(2, '5mm'),\n  ddo(3, '6mm'),\n];\n\nconst fluteDefault = 1;\nconst fluteOptions: IDropdownOption<number>[] = [\n  ddo(1, 1),\n  ddo(2, 2), // Default\n  ddo(3, 3),\n  ddo(4, 4),\n];\n\nconst aggressionDefault = 1;\nconst aggressionOptions: IDropdownOption<number>[] = [\n  ddo(0.5, 'Conservative'),\n  ddo(1, 'Normal'), // Default\n  ddo(1.33, 'Aggressive'),\n];\n\ntype IMaterialData = {\n  feedRate: [number, number, number, number];\n  depth: [number, number, number, number];\n  frMult: Map<string | number, number>;\n};\n\nconst materialDefault = 2;\nconst materialOptions: IDropdownOption<IMaterialData>[] = [\n  ddo(\n    {\n      feedRate: [0.0007, 0.0009, 0.001, 0.0011],\n      depth: [0.012, 0.018, 0.0175, 0.0175],\n      frMult: new Map<string, number>([['PowerRoute', 1.6]]),\n    },\n    'Aluminum (6061)',\n  ),\n  ddo(\n    {\n      feedRate: [0.0015, 0.002, 0.0023, 0.0027],\n      depth: [0.05, 0.065, 0.075, 0.075],\n      frMult: new Map<string, number>([['PowerRoute', 2]]),\n    },\n    'Hard Plastic (i.e. acrylic, pvc)',\n  ),\n  ddo(\n    {\n      feedRate: [0.0012, 0.0016, 0.002, 0.0023],\n      depth: [0.04, 0.06, 0.08, 0.08],\n      frMult: new Map<string, number>([['PowerRoute', 2]]),\n    },\n    'Hardwood (i.e. maple, oak, walnut)',\n  ),\n  ddo(\n    {\n      feedRate: [0.0018, 0.002, 0.0023, 0.0027],\n      depth: [0.08, 0.12, 0.16, 0.17],\n      frMult: new Map<string, number>([['PowerRoute', 2]]),\n    },\n    'MDF',\n  ),\n  ddo(\n    {\n      feedRate: [0.0016, 0.002, 0.0023, 0.0025],\n      depth: [0.06, 0.07, 0.08, 0.08],\n      frMult: new Map<string, number>([['PowerRoute', 2]]),\n    },\n    'Soft Plastic (i.e. abs, styrofoam)',\n  ),\n  ddo(\n    {\n      feedRate: [0.0016, 0.0022, 0.0024, 0.0028],\n      depth: [0.06, 0.1, 0.14, 0.16],\n      frMult: new Map<string, number>([['PowerRoute', 2]]),\n    },\n    'Softwood (i.e. pine, cedar, fir)',\n  ),\n];\n\nfunction trim(str: number, acc: number): string {\n  const val = str.toFixed(acc);\n  if (val.indexOf('.') > -1) {\n    for (let i = val.length - 1; i > 0; i--) {\n      if (val[i] !== '0') {\n        return val.substring(0, val[i] === '.' ? i : i + 1);\n      }\n    }\n  }\n  return val;\n}\n\nfunction App() {\n  // All the 'input' state of the calculator\n  const [machine, setMachine] = React.useState(machineDefault);\n  const [unit, setUnit] = React.useState<'mm' | 'inch'>('mm');\n  const [cutWidth, setcutWidth] = React.useState(cutWidthDefault);\n  const [numFlutes, setNumFlutes] = React.useState(fluteDefault);\n  const [aggression, setAggression] = React.useState(aggressionDefault);\n  const [material, setMaterial] = React.useState(materialDefault);\n  const [rpmValue, setRPMval] = React.useState(15000);\n\n  let feedRate = 0;\n  let depthOfCut = 0;\n  let chipLoad = 0;\n  if (\n    machine !== undefined &&\n    aggression !== undefined &&\n    cutWidth !== undefined &&\n    material !== undefined &&\n    numFlutes !== undefined\n  ) {\n    const materialData = materialOptions[material].data;\n    const cutterNumber = cutWidthOptions[cutWidth].data;\n    const fluteCount = fluteOptions[numFlutes].key as number;\n    const machineFactor = machineOptions[machine].data;\n    const machineKey = machineOptions[machine].key;\n    const aggressionFactor = aggressionOptions[aggression].data;\n    if (\n      materialData !== undefined &&\n      cutterNumber !== undefined &&\n      machineFactor !== undefined &&\n      aggressionFactor !== undefined\n    ) {\n      const unitScale = unit === 'mm' ? 25.4 : 1;\n      feedRate = materialData.feedRate[cutterNumber] * rpmValue * fluteCount;\n      // Check for a machine-specific multiplier override\n      const multiplier = materialData.frMult.get(machineKey) || 1;\n      feedRate = Math.min(320, feedRate * multiplier) * unitScale;\n      depthOfCut =\n        materialData.depth[cutterNumber] *\n        machineFactor *\n        aggressionFactor *\n        unitScale;\n      chipLoad = (feedRate / (rpmValue * fluteCount)) * unitScale;\n    }\n  }\n  function dd<T>(\n    label: string,\n    options: IDropdownOption<T>[],\n    val: number,\n    change: (option: number) => void,\n  ) {\n    return (\n      <div className=\"divRow\">\n        <div className=\"divCell\">{label}</div>\n        <div className=\"divCell\">\n          <Dropdown\n            defaultSelectedKey={options[val].key}\n            placeholder={label}\n            options={options}\n            onChange={(_ev, _itm, index) =>\n              index !== undefined && change(index)\n            }\n            selectedKey={options[val].key}\n          />\n        </div>\n      </div>\n    );\n  }\n  function dt(label: string, val: number, digits: number, suffix: string) {\n    return (\n      <div className=\"divRow\">\n        <div className=\"divCell\">{label}</div>\n        <div className=\"divCell\">\n          <TextField readOnly value={trim(val, digits) + ' ' + suffix} />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"center-screen\">\n        <div>\n          <div className=\"header\">Feed Rate Calculator</div>\n          <div className=\"divTable\">\n            {dd('Select a machine', machineOptions, machine, setMachine)}\n            {dd('Cutter Diameter', cutWidthOptions, cutWidth, setcutWidth)}\n            {dd('# of Flutes', fluteOptions, numFlutes, setNumFlutes)}\n            {dd('Aggression', aggressionOptions, aggression, setAggression)}\n            {dd('Material', materialOptions, material, setMaterial)}\n            <div className=\"divRow\">\n              <div className=\"divCell\">RPM</div>\n              <div className=\"divCell\">\n                <Slider\n                  min={800}\n                  max={25000}\n                  value={rpmValue}\n                  onChange={setRPMval}\n                />\n              </div>\n            </div>\n            <div className=\"divRow\">\n              <div className=\"divCell\">Output Units</div>\n              <div className=\"divCell\">\n                <ChoiceGroup\n                  styles={{\n                    flexContainer: { display: 'flex' },\n                    root: { display: 'inline' },\n                  }}\n                  selectedKey={unit}\n                  options={unitOptions}\n                  onChange={(_ev: any, option?: IChoiceGroupOption) => {\n                    option && setUnit(option.key === 'mm' ? 'mm' : 'inch');\n                  }}\n                />\n              </div>\n            </div>\n            {dt('Feed Rate', feedRate, 4, unit + '/min')}\n            {dt('Depth of Cut', depthOfCut, 4, unit)}\n            {dt('Chip Load', chipLoad, 6, unit)}\n          </div>\n        </div>\n      </div>\n      <a href=\"https://github.com/kevinfrei/feedrate\" style={{position:'fixed', bottom:20, right: 20}}>Source Code</a>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}